<policies>
    <inbound>
        <base />
        <!-- JWT Validation Policy -->
        <!-- REQUIRES: Azure Entra ID / OpenID Connect configuration -->
        <!-- NOT SUPPORTED in Pluralsight sandbox (Entra ID blocked) -->
        <!-- This policy is for reference/future use in full Azure environment -->

        <!-- Validate JWT token against Azure AD -->
        <validate-jwt header-name="Authorization" failed-validation-httpcode="401" failed-validation-error-message="Unauthorized. Access token is missing or invalid.">
            <openid-config url="https://login.microsoftonline.com/{tenant-id}/v2.0/.well-known/openid-configuration" />
            <audiences>
                <audience>api://{client-id}</audience>
            </audiences>
            <issuers>
                <issuer>https://sts.windows.net/{tenant-id}/</issuer>
                <issuer>https://login.microsoftonline.com/{tenant-id}/v2.0</issuer>
            </issuers>
            <required-claims>
                <claim name="aud" match="any">
                    <value>api://{client-id}</value>
                </claim>
            </required-claims>
        </validate-jwt>

        <!-- Rate limiting: 100 requests per minute per user -->
        <rate-limit-by-key calls="100"
                           renewal-period="60"
                           counter-key="@(context.Request.Headers.GetValueOrDefault("Authorization","").AsJwt()?.Subject)" />

        <!-- CORS policy for frontend access -->
        <cors allow-credentials="true">
            <allowed-origins>
                <!-- Replace with your Static Web App URL -->
                <origin>https://your-swa.azurestaticapps.net</origin>
            </allowed-origins>
            <allowed-methods>
                <method>GET</method>
                <method>POST</method>
                <method>OPTIONS</method>
            </allowed-methods>
            <allowed-headers>
                <header>Authorization</header>
                <header>Content-Type</header>
                <header>Accept</header>
            </allowed-headers>
        </cors>

        <!-- Extract user claims from JWT and inject as headers -->
        <!-- Function App expects X-User-Email and/or X-User-ID when AUTH_METHOD=apim -->
        <set-header name="X-User-Email" exists-action="override">
            <value>@(context.Request.Headers.GetValueOrDefault("Authorization","").AsJwt()?.Claims.GetValueOrDefault("email", ""))</value>
        </set-header>
        <set-header name="X-User-ID" exists-action="override">
            <value>@(context.Request.Headers.GetValueOrDefault("Authorization","").AsJwt()?.Subject)</value>
        </set-header>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
        <!-- Remove internal headers from response -->
        <set-header name="X-User-Email" exists-action="delete" />
        <set-header name="X-User-ID" exists-action="delete" />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>
