# Docker Compose and Podman Compose configuration
# Works with both: docker compose up / podman compose up
services:
  api:
    build:
      context: ./api-fastapi-azure-function
      dockerfile: Dockerfile
    platform: linux/amd64
    init: true
    ports:
      - "8080:80"
    environment:
      # JWT Authentication with Argon2 hashed passwords
      - AUTH_METHOD=jwt
      - JWT_SECRET_KEY=docker-compose-dev-secret-key-min-32-chars-long-12345
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      # Argon2 hashed passwords: demo=password123, admin=securepass
      - JWT_TEST_USERS={"demo":"$$argon2id$$v=19$$m=65536,t=3,p=4$$TklhcmEkyMzqJaH3KHQQDA$$rgp8AmtaR6PzBgjyZGNsivb2yJRqULRt5B+BmzUnzbo","admin":"$$argon2id$$v=19$$m=65536,t=3,p=4$$JiTJZlTwD/1jJLlMQMOwCA$$HbubnE11kzEfcszqKtMOmjvxj14vjooqbdZtgc1NYCs"}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/v1/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./frontend-python-flask
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - API_BASE_URL=http://api:80/api/v1
      # JWT Authentication credentials
      - JWT_USERNAME=demo
      - JWT_PASSWORD=password123
    depends_on:
      api:
        condition: service_healthy
