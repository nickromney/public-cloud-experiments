{
  "permissions": {
    "allow": [
      "WebFetch(domain:github.com)",
      "Bash(git clone:*)",
      "Bash(tfwrapper -a azure-experiments -e dev -r uksouth -s platform plan)",
      "Bash(make:*)",
      "Bash(tree:*)",
      "Bash(grep:*)",
      "Bash(tofu validate:*)",
      "Bash(tofu plan:*)",
      "Bash(tofu force-unlock:*)",
      "Bash(tofu init:*)",
      "Bash(tflint:*)",
      "Bash(tofu providers schema:*)",
      "WebFetch(domain:help.pluralsight.com)",
      "Bash(shellcheck:*)",
      "Bash(brew install:*)",
      "Bash(terragrunt init:*)",
      "Bash(terragrunt plan:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(chmod:*)",
      "Bash(uv init:*)",
      "Bash(uv add:*)",
      "Bash(npm init:*)",
      "Bash(npm install:*)",
      "Bash(npx tailwindcss:*)",
      "Bash(npm run build:css:*)",
      "Bash(pre-commit run:*)",
      "Bash(./cloud-networking/azure/06-container-tests.sh:*)",
      "Bash(RESOURCE_GROUP=1-2a40e064-playground-sandbox ./06-container-tests.sh)",
      "Bash(az container exec:*)",
      "Bash(az network vnet subnet list:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(echo \"=== $subnet ===\")",
      "Bash(az network vnet subnet show:*)",
      "Bash(done)",
      "Bash(bats:*)",
      "Bash(echo \"Pattern found: $?\")",
      "Bash(RESOURCE_GROUP=rg-test VNET_NAME=vnet-test SUBNET_NAME=snet-test CONTAINER_NAME=aci-test ./resource-container-instance.sh)",
      "Bash(RESOURCE_GROUP=rg-test VNET_NAME=vnet-test SUBNET_NAME=snet-test CONTAINER_NAME=aci-test bash ./resource-container-instance.sh)",
      "Bash(export RESOURCE_GROUP=rg-test VNET_NAME=vnet-test SUBNET_NAME=snet-test CONTAINER_NAME=aci-test)",
      "Bash(./resource-container-instance.sh:*)",
      "Bash(export AZ_MOCK_RESOURCE_NOT_FOUND=true)",
      "Bash(./bin/az group show --name test)",
      "Bash(az account:*)",
      "Bash(az group list:*)",
      "Bash(az network vnet list:*)",
      "Bash(az group show:*)",
      "Bash(echo \"Exit code: $?\")",
      "Bash(az network vnet show:*)",
      "Bash(AZ_MOCK_RESOURCE_NOT_FOUND=true tests/bin/az network vnet show --name test --resource-group test)",
      "Bash(export:*)",
      "Bash(echo:*)",
      "Bash(bash:*)",
      "Bash(./02-azure-simple-network.sh:*)",
      "Bash(BATS_INTEGRATION=true RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' bats test_integration_network.bats)",
      "Bash(./03-azure-network-aci.sh:*)",
      "Bash(az network vnet delete:*)",
      "Bash(az network nsg delete:*)",
      "Bash(BATS_INTEGRATION=true RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' bats test_integration_network.bats -t)",
      "Bash(./05-container-instances.sh:*)",
      "Bash(az container list:*)",
      "Bash(./06-container-tests.sh:*)",
      "Bash(az container delete:*)",
      "Bash(az container show:*)",
      "Bash(timeout:*)",
      "Bash(RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' ./05-container-instances.sh)",
      "Bash(RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' ./06-container-tests.sh)",
      "Bash(RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' ./07-vm.sh)",
      "Bash(RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' ./02-azure-simple-network.sh)",
      "Bash(az vm run-command invoke:*)",
      "Bash(az network nic show:*)",
      "Bash(az network nic update:*)",
      "Bash(RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' ./12-private-vm.sh)",
      "Bash(RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' ./13-private-vm-tests.sh)",
      "Bash(RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' ./14-nva-routing.sh)",
      "Bash(RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' ./15-nva-tests.sh)",
      "Bash(az network nic show-effective-route-table:*)",
      "Bash(az network nsg rule list:*)",
      "Bash(az network nsg show:*)",
      "Bash(az network nic list-effective-nsg:*)",
      "Bash(RESOURCE_GROUP='1-b7ad96ae-playground-sandbox' VM_NAME=vm-firewall ./08-nftables.sh)",
      "Bash(./resource-route.sh:*)",
      "Bash(az network route-table route list:*)",
      "Bash(RESOURCE_GROUP='1-b7ad96ae-playground-sandbox')",
      "Bash(az network nsg list:*)",
      "Bash(az network nsg rule show:*)",
      "Bash(az network nsg rule update:*)",
      "Bash(az network nsg rule create:*)",
      "Bash(az vm list:*)",
      "Bash(az vm get-instance-view:*)",
      "Bash(az network public-ip list:*)",
      "Bash(az network bastion list:*)",
      "Bash(do echo \"\")",
      "Bash(az network route-table show:*)",
      "Bash(RESOURCE_GROUP='1-62680a9d-playground-sandbox' ./cloud-networking/azure/02-azure-simple-network.sh)",
      "Bash(RESOURCE_GROUP='1-62680a9d-playground-sandbox' ./cloud-networking/azure/07-vm.sh)",
      "Bash(RESOURCE_GROUP='1-62680a9d-playground-sandbox' ./cloud-networking/azure/12-private-vm.sh)",
      "Bash(RESOURCE_GROUP='1-62680a9d-playground-sandbox' ./cloud-networking/azure/14-nva-routing.sh)",
      "Bash(RESOURCE_GROUP='1-62680a9d-playground-sandbox' VM_NAME=vm-firewall ./cloud-networking/azure/08-nftables.sh)",
      "Bash(RESOURCE_GROUP='1-62680a9d-playground-sandbox' ./cloud-networking/azure/15-nva-tests.sh)",
      "Bash(az network nic create:*)",
      "Bash(az vm create:*)",
      "Bash(az network route-table:*)",
      "Bash(az network route-table route:*)",
      "Bash(az network vnet subnet update:*)",
      "Bash(az vm show:*)",
      "Bash(az network public-ip create:*)",
      "Bash(az network nic ip-config update:*)",
      "Bash(xargs:*)",
      "Bash(az network nic ip-config show:*)",
      "Bash(BATS_INTEGRATION=true RESOURCE_GROUP='1-62680a9d-playground-sandbox' bats tests/test_integration_network.bats)",
      "Bash(curl:*)",
      "Bash(uv run pytest:*)",
      "Bash(uv sync:*)",
      "Bash(./test_auth.sh:*)",
      "WebFetch(domain:jwt.io)",
      "Bash(podman images:*)",
      "Bash(podman compose:*)",
      "Bash(awk:*)",
      "Bash(AUTHENTICATION-OPTIONS.md)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(uv run:*)",
      "Bash(npx markdownlint-cli2:*)",
      "Bash(podman-compose up:*)",
      "Bash(podman-compose:*)"
    ],
    "deny": [],
    "ask": []
  }
}
